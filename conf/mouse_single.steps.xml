<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE page [
<!-- Variables to replace with xml data generating during the running of create_cluster_xml.pl -->
<!-- TEMPLATES -->
<!ENTITY pipeVersion "cluster->(common pipeline_version)">
<!ENTITY svndir "cluster->(common svndir)">
<!ENTITY scriptdir "cluster->(common script_dir)">
<!ENTITY confdir "cluster->(mouse_single svn conf_dir)">
<!ENTITY fastadir "cluster->(mouse_single svn fasta_file)">
<!ENTITY ref "pipe->(mouse_single annotation_version ref_genome)">
<!ENTITY dbsnpVersion "pipe->(mouse_single annotation_version dbsnp_version)">
<!ENTITY commonVersion "pipe->(mouse_single annotation_version common_verion)">
<!ENTITY exonVersion "pipe->(mouse_single annotation_version exon_version)">
<!ENTITY geneVersion "pipe->(mouse_single annotation_version gene_version)">
<!ENTITY samtools "pipe->(mouse_single binaries samtools binary)">
<!ENTITY localOutdir "cluster->(mouse_single base_directories base_run_directory)/&pipeVersion;">

<!-- COMMANDS -->
<!ENTITY mergebamCommand "&scriptdir;/merge_bam.pl -source_name &nameSource; -output OUTBAM.merge_bam.out.bam -bamfiles BAMFILES;">
<!ENTITY copyBamCommand "&scriptdir;/copy_bam.pl -source_name &nameSource; -bam OUTBAM.merge_bam.out.bam">
<!ENTITY rmdupCommand "&samtools; rmdup TARGETED OUTBAM.merge_bam.out.bam OUTBAM.remove_duplicates.out.bam; &samtools; index OUTBAM.remove_duplicates.out.bam">
<!ENTITY exonDepthCommand "&samtools; mpileup -A -r CHR -f &fastadir; -l &confdir;/exon/&exonVersion;/&ref;.exon.coord OUTBAM.remove_duplicates.out.bam 2>/dev/null > WORKDIR/exon.pileup; &scriptdir;/exon_coverage.pl -exon_pileup WORKDIR/exon.pileup -exon &confdir;/exon/&exonVersion;/&ref;.exon.overlap.CHR -chr CHR -output SUMMARY.exonReport.summary.tsv -sample_name &nameSample; ; rm WORKDIR/exon.pileup">
<!ENTITY bamStatsCommand "&scriptdir;/get_bam_stats.pl -exon &confdir;/exon/&exonVersion;/&ref;.exon.overlap.all -sample_name &nameSample; -bam OUTBAM.merge_bam.out.bam -output SUMMARY.readReport.summary.txt; rm &localOutdir;/SYM_BAM 2>/dev/null; ln -s OUTBAM.remove_duplicates.out.bam &localOutdir;/SYM_BAM; rm &localOutdir;/SYM_BAM.bai 2>/dev/null; ln -s OUTBAM.remove_duplicates.out.bam.bai &localOutdir;/SYM_BAM.bai">
<!ENTITY submitsnvCommand "&scriptdir;/submit_snvs.pl -sample_name &nameSample; -submit">
<!ENTITY mergeVcfCommand "&scriptdir;/merge_vcf.pl -sample_name &nameSample; -outvcf OUTVCF.all.vcf -output OUTPUT -ref &fastadir; -bam OUTBAM.remove_duplicates.out.bam -rmbam OUTBAM.merge_bam.out.bam"> 
<!ENTITY filterVcfCommand "&scriptdir;/filter_vcf.pl -sample_name &nameSample; -vcf_file OUTVCF.all.vcf -snv_infile INPUT.snv -indel_infile INPUT.indel -overlap_outfile_snv OVERLAPOUT.snv -overlap_outfile_indel OVERLAPOUT.indel">
<!ENTITY dbVariantCommand "&scriptdir;/db_variants.pl -chr CHR -infile_snv OVERLAPIN.snv -infile_indel OVERLAPIN.indel -snv_pileup INPUT.snv.pileup -indel_pileup INPUT.indel.pileup -overlap_outfile_snv OVERLAPOUT.snv -overlap_outfile_indel OVERLAPOUT.indel">
<!ENTITY filterExonCommand "&scriptdir;/overlap_general.pl -snv -indel -match PASS -overlap_outfile_snv OVERLAPOUT.snv -overlap_outfile_indel OVERLAPOUT.indel -ref_file_snv OVERLAPIN.snv -ref_file_indel OVERLAPIN.indel -coord_filtername filter_exon -coord_file_snv &confdir;/exon/&exonVersion;/&ref;.exon.overlap.CHR -coord_file_indel &confdir;/exon/&exonVersion;/&ref;.exon.overlap.CHR -writeDB 1 -chr CHR">
<!ENTITY filterExonNSCommand "&scriptdir;/filter_exon_ns.pl -overlap_outfile_snv OVERLAPOUT.snv -ref_file_snv OVERLAPIN.snv -exonns_filter_name filter_exon_ns -tmpdir WORKDIR -writeDB 1">
<!ENTITY filterSpliceCommand "&scriptdir;/overlap_general.pl -snv -indel -match PASS -overlap_outfile_snv OVERLAPOUT.snv -overlap_outfile_indel OVERLAPOUT.indel -ref_file_snv OVERLAPIN.snv -ref_file_indel OVERLAPIN.indel -coord_filtername filter_splicesite -coord_file_snv &confdir;/exon/&exonVersion;/&ref;.splice.overlap.CHR -coord_file_indel &confdir;/exon/&exonVersion;/&ref;.splice.overlap.CHR -writeDB 1 -chr CHR" >
<!ENTITY filterVEPCommand "&scriptdir;/filter_vep.pl -overlap_outfile_snv OVERLAPOUT -ref_file_snv OVERLAPIN.snv -ref_file_indel OVERLAPIN.indel _name filter_vep -tmpdir WORKDIR -writeDB 1">
<!ENTITY filterDbsnpSnvCommand "&scriptdir;/overlap_general.pl -snv -overlap_outfile_snv OVERLAPOUT -ref_file_snv OVERLAPIN.snv -coord_filtername filter_dbsnp_snv -coord_file_snv &confdir;/dbsnp/&dbsnpVersion;/&ref;.dbsnp.overlap.snv.CHR -writeDB 1 -chr CHR">
<!ENTITY filterDbsnpIndelCommand "&scriptdir;/overlap_indels_bytype.pl -coord_filtername filter_dbsnp_indel -overlap_outfile OVERLAPOUT -ref_file OVERLAPIN.indel -coord_file &confdir;/dbsnp/&dbsnpVersion;/&ref;.dbsnp.overlap.indel.CHR -writeDB 1 -chr CHR">
<!ENTITY filterCommonSnvCommand "&scriptdir;/overlap_general.pl -snv -chr CHR -ref_file_snv OVERLAPIN.snv -overlap_outfile_snv OVERLAPOUT -coord_filtername filter_common_snv -coord_file_snv &confdir;/common/&commonVersion;/&ref;.common.overlap.snv.CHR -writeDB 1 -sample_name &nameSample;"> 
<!ENTITY filterCommonIndelCommand "&scriptdir;/overlap_indels_bytype.pl -coord_filtername filter_common_indel -overlap_outfile OVERLAPOUT -ref_file OVERLAPIN.indel -coord_file &confdir;/common/&commonVersion;/&ref;.common.overlap.indel.CHR -writeDB 1 -chr CHR -sample_name &nameSample;">
<!ENTITY filterPolyphenCommand "&scriptdir;/filter_polyphen.pl -ref &ref; -overlap_outfile OVERLAPOUT -tmpdir WORKDIR/polyphen -exon_coord_file &confdir;/exon/&exonVersion;/&ref;.exon.overlap.all -annotation_file &confdir;/gene/&geneVersion;/&ref;.gene.all -writeDB 1">
<!ENTITY ReportSnvCommand "&scriptdir;/generate_snv_report.pl -polyphen_file OVERLAPIN -ref &ref; -tsv_file SUMMARY.snvList.summary.tsv -exon_coord_file &confdir;/exon/&exonVersion;/&ref;.exon.overlap.all -annotation_file &confdir;/gene/&geneVersion;/&ref;.gene.all -pass_summary_file SUMMARY.snvReport.summary.txt -pass_file OVERLAPOUT -filter_summary_file SUMMARY.snvfilterList.summary.txt">
<!ENTITY ReportIndelCommand "&scriptdir;/generate_variant_report.pl -ref &ref; -tsv_file SUMMARY.indelList.summary.tsv -exon_coord_file &confdir;/exon/&exonVersion;/&ref;.exon.overlap.all -annotation_file &confdir;/gene/&geneVersion;/&ref;.gene.all -pass_summary_file SUMMARY.indelReport.summary.txt -pass_file OVERLAPOUT -filter_summary_file SUMMARY.indelfilterList.summary.txt">
<!ENTITY archiveCommand "&scriptdir;/compress.pl -run 1 -dir WORKDIR -workdir -compress -suffix tar.gz -tarball &nameSample;_RUN.tar.gz -mv">
<!ENTITY scpResultCommand "&scriptdir;/scp_results.pl -copybam OUTBAM.gatk.bam -source_name &nameSource; -files WORKDIR/&nameSample;_RUN.tar.gz -release_files -workdir WORKDIR">
]>

<pipeline_config> 
  <sample_name>&nameSample;</sample_name>

  <!-- List of step to run -->
  <steps_order>
  	<!-- file based steps first -->
  	<step>merge_bam</step>
    <step>copy_bam</step>
    <step>remove_duplicates</step>
	<step>exon_depth</step>
    <step>bam_stats</step>
    <step>submit_snvs</step>
    <step>single_vcf</step> <!-- This step isn't run in the normal pipeline method but records the creation of a vcf in the database to indicate vcf done for a single chromosome -->
    <step>merge_vcf</step>
    <step>filter_vcf</step>
    <step>db_variants</step>   
	<step>filter_exon</step>
	<step>filter_exon_ns</step> 
	<step>filter_splicesite</step>
    <step>filter_vep</step> 
   	<step>filter_dbsnp_snv</step>
   	<step>filter_dbsnp_indel</step>
   	<step>filter_common_snv</step>
   	<step>filter_common_indel</step>
   	<step>filter_polyphen</step>
    <step>report_snv</step>
    <step>report_indel</step>
    <step>archive</step>
    <step>scp_results</step>
  </steps_order> 
  
  <!-- Specifics for each step -->
  <steps>
  	<step name="merge_bam">
  		<command>&mergebamCommand;</command>
  		<input_from>none</input_from>
      	<input_overlap>none</input_overlap>
      	<by_chr>0</by_chr>
		<mem>4GB</mem>
      	<cpus>1</cpus>
      	<walltime>24:00:00</walltime>
      	<first_step>1</first_step>
      	<release_file>.merge_bam.out.bam</release_file>
  	</step>
  	
    <step name="remove_duplicates">
    	<command>&rmdupCommand;</command>
      	<input_from>merge_bam</input_from>
      	<input_overlap>merge_bam</input_overlap>
      	<by_chr>0</by_chr>
      	<mem>4GB</mem>
      	<cpus>1</cpus>
      	<walltime>24:00:00</walltime>
    </step>
    
    <step name="copy_bam">
    	<command>&copyBamCommand;</command>
      	<input_from>merge_bam</input_from>
      	<input_overlap>merge_bam</input_overlap>
      	<by_chr>0</by_chr>
      	<mem>1GB</mem>
      	<cpus>1</cpus>
      	<walltime>4:00:00</walltime>
      	<copyq>1</copyq>
    </step>
    
     <step name="exon_depth">
      	<command>&exonDepthCommand;</command>
      	<input_from>remove_duplicates</input_from>
      	<input_overlap>remove_duplicates</input_overlap>
      	<by_chr>1</by_chr>
      	<mem>4GB</mem>
      	<cpus>1</cpus>
      	<walltime>24:00:00</walltime>    
    </step>

    <step name="bam_stats">
      	<command>&bamStatsCommand;</command>
      	<by_chr>0</by_chr>
      	<input_from>merge_bam</input_from>
      	<input_overlap>merge_bam</input_overlap>
      	<mem>4GB</mem>
      	<cpus>1</cpus>
      	<walltime>24:00:00</walltime>
    </step>
    
    <step name="submit_snvs">
      	<command>&submitsnvCommand;</command>
      	<input_from>none</input_from>
      	<input_overlap>none</input_overlap>
      	<by_chr>0</by_chr>
      	<runid_args>1</runid_args>
      	<mem>4GB</mem>
      	<cpus>1</cpus>
	    <walltime>24:00:00</walltime>
    </step>
             
    <!-- placeholder as we never run this command this way; runs after single vcf is generated from submit snvs steps -->        
    <step name="single_vcf">
      	<command>none</command>
	   	<input_from>none</input_from>
      	<input_overlap>none</input_overlap>
      	<by_chr>0</by_chr>
      	<mem>4GB</mem>
      	<cpus>1</cpus>
      	<walltime>24:00:00</walltime>
    </step>
             
    <step name="merge_vcf">
      	<command>&mergeVcfCommand;</command>
      	<input_from>remove_duplicates</input_from>
      	<input_overlap>none</input_overlap>
      	<by_chr>0</by_chr>
      	<mem>4GB</mem>
      	<cpus>1</cpus>
      	<walltime>36:00:00</walltime>
      	<release_file>.all.vcf</release_file>
    </step>                   
         
    <step name="filter_vcf">
      	<command>&filterVcfCommand;</command>
      	<input_from>merge_vcf</input_from>
      	<input_overlap>none</input_overlap>
      	<by_chr>0</by_chr>
      	<mem>6GB</mem>
      	<cpus>1</cpus>
      	<walltime>24:00:00</walltime>
    </step>   
       
    <step name="db_variants">
      	<command>&dbVariantCommand;</command>
	    <input_from>merge_vcf</input_from>
      	<input_overlap>filter_vcf</input_overlap>
      	<by_chr>1</by_chr>
      	<cpus>1</cpus>
      	<mem>8GB</mem>
      	<walltime>48:00:00</walltime>
      	<runid_args>1</runid_args>
      	<deleteSnp>1</deleteSnp>
      	<deleteVar>1</deleteVar>
    </step>
  
    <step name="filter_exon">
      	<command>&filterExonCommand;</command>
      	<input_from>none</input_from>
      	<input_overlap>db_variants</input_overlap>     
      	<by_chr>1</by_chr>
      	<mem>8GB</mem>
      	<cpus>1</cpus>
      	<walltime>24:00:00</walltime>
      	<runid_args>1</runid_args>
    </step>

	<step name="filter_exon_ns">
      	<command>&filterExonNSCommand;</command>
      	<input_from>none</input_from>
      	<input_overlap>db_variants</input_overlap>     
      	<by_chr>0</by_chr>
      	<mem>16GB</mem>
      	<cpus>4</cpus>
      	<walltime>24:00:00</walltime>
      	<runid_args>1</runid_args>
    </step>

    <step name="filter_splicesite">
      	<command>&filterSpliceCommand;</command>
      	<input_from>none</input_from>
      	<input_overlap>db_variants</input_overlap>    
      	<by_chr>1</by_chr>
      	<mem>8GB</mem>
      	<cpus>1</cpus>
      	<walltime>24:00:00</walltime>
      	<runid_args>1</runid_args>
    </step>
  
  	<step name="filter_vep">
      	<command>&filterVEPCommand;</command>
      	<input_from>none</input_from>
      	<input_overlap>db_variants</input_overlap>     
      	<by_chr>0</by_chr>
      	<mem>16GB</mem>
      	<cpus>4</cpus>
      	<walltime>24:00:00</walltime>
      	<runid_args>1</runid_args>
    </step>
  
        
    <step name="filter_dbsnp_snv">
      	<command>&filterDbsnpSnvCommand;</command>
      	<input_from>none</input_from>
      	<input_overlap>db_variants</input_overlap>    
      	<by_chr>1</by_chr>
      	<mem>8GB</mem>
      	<cpus>1</cpus>
      	<walltime>24:00:00</walltime>
      	<runid_args>1</runid_args>
    </step>
    
    <step name="filter_dbsnp_indel">
      	<command>&filterDbsnpIndelCommand;</command>
      	<input_from>none</input_from>
      	<input_overlap>db_variants</input_overlap>   
      	<by_chr>1</by_chr>
      	<mem>8GB</mem>
      	<cpus>1</cpus>
      	<walltime>24:00:00</walltime>
      	<runid_args>1</runid_args>
    </step>
         
    <step name="filter_common_snv">
      	<command>&filterCommonSnvCommand;</command>
      	<input_from>none</input_from>
      	<input_overlap>db_variants</input_overlap>    
      	<by_chr>1</by_chr>
      	<mem>8GB</mem>
      	<cpus>1</cpus>
      	<walltime>24:00:00</walltime>
      	<runid_args>1</runid_args>
    </step>
    
    <step name="filter_common_indel">
      	<command>&filterCommonIndelCommand;</command>
      	<input_from>none</input_from>
      	<input_overlap>db_variants</input_overlap>   
      	<by_chr>1</by_chr>
      	<mem>8GB</mem>
      	<cpus>1</cpus>
      	<walltime>24:00:00</walltime>
      	<runid_args>1</runid_args>
    </step>
    
    <step name="filter_polyphen">
      	<command>&filterPolyphenCommand;</command>
      	<input_from>none</input_from>
      	<input_overlap>db_variants</input_overlap>   
      	<by_chr>0</by_chr>
      	<mem>8GB</mem>
      	<cpus>1</cpus>
      	<walltime>24:00:00</walltime>
      	<runid_args>1</runid_args>
      	<module>module load java/jdk1.7.0_25</module>
    </step>
    
    <step name="report_snv">
      	<command>&ReportSnvCommand;</command>
      	<input_from>none</input_from>
      	<input_overlap>filter_polyphen</input_overlap>
      	<by_chr>0</by_chr>
      	<mem>16GB</mem>
      	<cpus>1</cpus>
      	<walltime>8:00:00</walltime>
      	<runid_args>1</runid_args>
      	<deleteSnpRow>1</deleteSnpRow>
     	<release_file>.snvList.summary.tsv</release_file>
    </step>
    
    <step name="report_indel">
      	<command>&ReportIndelCommand;</command>
      	<input_from>none</input_from>
      	<input_overlap>none</input_overlap>
      	<by_chr>0</by_chr>
      	<mem>8GB</mem>
      	<cpus>1</cpus>
      	<walltime>4:00:00</walltime>
      	<runid_args>1</runid_args>
      	<deleteVarRow>1</deleteVarRow>
      	<release_file>.indelList.summary.tsv</release_file>
    </step>
    
    <step name="archive">
  	  	<command>&archiveCommand;</command>
      	<input_from>none</input_from>
      	<input_overlap>none</input_overlap>
      	<by_chr>0</by_chr>
      	<mem>1GB</mem>
      	<cpus>1</cpus>
      	<walltime>1:00:00</walltime>
      	<runid_args>1</runid_args>
  	</step>
    
    <step name="scp_results">
  	  	<command>&scpResultCommand;</command>
      	<input_from>none</input_from>
      	<input_overlap>none</input_overlap>
      	<by_chr>0</by_chr>
      	<mem>1GB</mem>
      	<cpus>1</cpus>
      	<walltime>1:00:00</walltime>
      	<runid_args>1</runid_args>
      	<last_step>1</last_step>
      	<copyq>1</copyq>
  	</step>
    
  
 </steps>
</pipeline_config>
